functions are 3 things

functions take a scope, set params to scope, and follow a procedure

a procedure is just a list of commands

{
1 + 3
2 + 4
5 + 6
}

a = 2
b = 4

f = [
  a + b
]
myScope = scope(parent)
boundScope = bind(myScope, {a = 1, b = 1})
apply(f, boundScope)


myScope = apply(scope, parent)
boundScope = apply(bind, myScope, {a = 1, b = 1})
apply(f, boundScope)

f = {
  a + b
}.

a = 1
{ b = 2 f! }




fib = {
  if n == 0 || n == 1
  then {n = n - 1 fib()} + {n = n - 2 fib()}
}.



fib = (n) -> {
  if n == 0 || n == 1
  then fib(n - 1) + fib(n - 2)
}.

t = {
  true
}.

f = {
  false
}.

makePair = {
  true = first
  false = second
  { bool! }.
}.

head = {
  bool = t
  pair!
}.

tail = {
  bool = f
}



myPair = {
  first = 1
  second = 2
  {
    true = first
    false = second
    { bool! }.
  }
}


{
  pair = {
    first = 1
    second = 2
    {
      true = first
      false = second
      { bool! }.
    }
  }
  {
    bool = t
    pair!
  }
}



myPair = {
  first = 1
  second = 2
  makePair!
}

{
  pair = myPair
  head!
}